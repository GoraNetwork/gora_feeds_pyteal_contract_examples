{
    "hints": {
        "opt_in_assets(asset,application)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "return_oracle_response(byte[])byte[]": {
            "read_only": true,
            "call_config": {
                "no_op": "CALL"
            }
        },
        "handle_oracle_response(uint32,byte[])void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "send_classic_oracle_request(uint64,byte[],(uint32,byte[][],uint32)[],uint64,byte[],uint32,byte[],(byte[],uint64)[],uint64[],uint64[],address[])void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "send_custom_oracle_request(uint64,byte[],(byte[],byte[],byte[],byte[],uint32,uint8,uint8,byte[],byte[],byte[],uint32,uint32)[],uint64,byte[],uint32,byte[],(byte[],uint64)[],uint64[],uint64[],address[])void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "send_offchain_oracle_request(uint64,byte[],(uint32,uint8,byte[],byte[][],byte[],byte[],uint32,uint32)[],uint64,byte[],uint32,byte[],(byte[],uint64)[],uint64[],uint64[],address[])void": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {},
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "CustomeGoraRequester",
        "methods": [
            {
                "name": "opt_in_assets",
                "args": [
                    {
                        "type": "asset",
                        "name": "gora_token_reference"
                    },
                    {
                        "type": "application",
                        "name": "gora_app_reference"
                    }
                ],
                "returns": {
                    "type": "void"
                },
                "desc": "OPTIN THE CONTRACT TO THE NATIVE TOKEN AND GORA CONTRACT"
            },
            {
                "name": "return_oracle_response",
                "args": [
                    {
                        "type": "byte[]",
                        "name": "user_data"
                    }
                ],
                "returns": {
                    "type": "byte[]"
                },
                "desc": "READ THE ORACLE RESPONSE,\nTHIS USES THE USER DATA AS THE KEY TO THE BOX BECAUSE WE USED THE USER  DATA AS THE KEY TO THE BOX WHEN SAVING THE ORACLE REPONSE ."
            },
            {
                "name": "handle_oracle_response",
                "args": [
                    {
                        "type": "uint32",
                        "name": "resp_type"
                    },
                    {
                        "type": "byte[]",
                        "name": "resp_body_bytes"
                    }
                ],
                "returns": {
                    "type": "void"
                },
                "desc": "THIS IS A SAMPLE DESTINATION METHOD, THIS SHOWS HOW THE RESPONSE FROM THE\nORACLE CAN BE SAVED/USED IN A SMART CONTRACT.  IN OUR CASE WE ONLY SAVE THE RESPONSE TO THE SMART CONTRACT\nUSING A BOX STORAGE INSTEAD OF USING A LOCAL OR GLOBAL STORAGE, GIVES US THE FREEDOM TO RETURN ENTIRE JSON RESPONSE INSTEAD OF JUST A SINGLE JSON DATA VALU"
            },
            {
                "name": "send_classic_oracle_request",
                "args": [
                    {
                        "type": "uint64",
                        "name": "request_type"
                    },
                    {
                        "type": "byte[]",
                        "name": "request_key"
                    },
                    {
                        "type": "(uint32,byte[][],uint32)[]",
                        "name": "sourceSpec"
                    },
                    {
                        "type": "uint64",
                        "name": "destination_app_id"
                    },
                    {
                        "type": "byte[]",
                        "name": "destination_method"
                    },
                    {
                        "type": "uint32",
                        "name": "aggregation_number"
                    },
                    {
                        "type": "byte[]",
                        "name": "user_data"
                    },
                    {
                        "type": "(byte[],uint64)[]",
                        "name": "box_references"
                    },
                    {
                        "type": "uint64[]",
                        "name": "app_references"
                    },
                    {
                        "type": "uint64[]",
                        "name": "asset_references"
                    },
                    {
                        "type": "address[]",
                        "name": "account_references"
                    }
                ],
                "returns": {
                    "type": "void"
                },
                "desc": "Make an classic oracle request with specified parameters.\nThis type of request are requests sent to the gora oracle for results from the oracle."
            },
            {
                "name": "send_custom_oracle_request",
                "args": [
                    {
                        "type": "uint64",
                        "name": "request_type"
                    },
                    {
                        "type": "byte[]",
                        "name": "request_key"
                    },
                    {
                        "type": "(byte[],byte[],byte[],byte[],uint32,uint8,uint8,byte[],byte[],byte[],uint32,uint32)[]",
                        "name": "sourceSpec"
                    },
                    {
                        "type": "uint64",
                        "name": "destination_app_id"
                    },
                    {
                        "type": "byte[]",
                        "name": "destination_method"
                    },
                    {
                        "type": "uint32",
                        "name": "aggregation_number"
                    },
                    {
                        "type": "byte[]",
                        "name": "user_data"
                    },
                    {
                        "type": "(byte[],uint64)[]",
                        "name": "box_references"
                    },
                    {
                        "type": "uint64[]",
                        "name": "app_references"
                    },
                    {
                        "type": "uint64[]",
                        "name": "asset_references"
                    },
                    {
                        "type": "address[]",
                        "name": "account_references"
                    }
                ],
                "returns": {
                    "type": "void"
                },
                "desc": "Make an custom oracle request with specified parameters.\nThis type of request are requests sent to a custom url/api for results,  this url/api can include anything or it might even be a webpage."
            },
            {
                "name": "send_offchain_oracle_request",
                "args": [
                    {
                        "type": "uint64",
                        "name": "request_type"
                    },
                    {
                        "type": "byte[]",
                        "name": "request_key"
                    },
                    {
                        "type": "(uint32,uint8,byte[],byte[][],byte[],byte[],uint32,uint32)[]",
                        "name": "sourceSpec"
                    },
                    {
                        "type": "uint64",
                        "name": "destination_app_id"
                    },
                    {
                        "type": "byte[]",
                        "name": "destination_method"
                    },
                    {
                        "type": "uint32",
                        "name": "aggregation_number"
                    },
                    {
                        "type": "byte[]",
                        "name": "user_data"
                    },
                    {
                        "type": "(byte[],uint64)[]",
                        "name": "box_references"
                    },
                    {
                        "type": "uint64[]",
                        "name": "app_references"
                    },
                    {
                        "type": "uint64[]",
                        "name": "asset_references"
                    },
                    {
                        "type": "address[]",
                        "name": "account_references"
                    }
                ],
                "returns": {
                    "type": "void"
                },
                "desc": "Make an offchain oracle request with specified parameters.\nThis type of request are requests sent to an off-chain service for results,"
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE",
        "opt_in": "CALL"
    }
}